[gd_scene load_steps=10 format=2]

[ext_resource path="res://system/ui/scene_manager/scene_manager.gd" type="Script" id=1]
[ext_resource path="res://scenes/ui/startup_screen/startup_screen.tscn" type="PackedScene" id=2]
[ext_resource path="res://ui/gui/black_overlay.gd" type="Script" id=3]
[ext_resource path="res://system/parts/level/part_wave_time_tracker.gd" type="Script" id=4]

[sub_resource type="Animation" id=1]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ) ]
}

[sub_resource type="Animation" id=2]
resource_name = "fade_in"
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath(".:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ), Color( 0, 0, 0, 1 ) ]
}

[sub_resource type="Animation" id=3]
resource_name = "fade_out"
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath(".:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 0, 0, 0, 0 ) ]
}

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

vec4 texturePointSmooth(sampler2D tex, vec2 uv) {
	vec2 size = vec2(textureSize(tex, 0));
	vec2 pixel = vec2(1.0) / size;
	uv -= pixel * vec2(0.5);
	vec2 uv_pixels = uv * size;
	vec2 delta_pixel = fract(uv_pixels) - vec2(0.5);
	vec2 ddxy = fwidth(uv_pixels);
	vec2 mip = log2(ddxy) - 0.5;
	return textureLod(tex, uv + (clamp(delta_pixel / ddxy, 0.0, 1.0) - delta_pixel) * pixel, min(mip.x, mip.y));
}

void fragment() {
	vec4 Texture = texturePointSmooth(SCREEN_TEXTURE, SCREEN_UV);
	COLOR = Texture.rgba;
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )

[node name="scene_manager" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
script = ExtResource( 1 )

[node name="current_scene" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2

[node name="startup_screen" parent="current_scene" instance=ExtResource( 2 )]

[node name="black_overlay" type="CanvasLayer" parent="."]
script = ExtResource( 3 )

[node name="color_rect" type="ColorRect" parent="black_overlay"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
color = Color( 0, 0, 0, 0 )

[node name="animation_player" type="AnimationPlayer" parent="black_overlay"]
root_node = NodePath("../color_rect")
anims/RESET = SubResource( 1 )
anims/fade_in = SubResource( 2 )
anims/fade_out = SubResource( 3 )

[node name="no_jitter_shader" type="CanvasLayer" parent="."]

[node name="ColorRect" type="ColorRect" parent="no_jitter_shader"]
material = SubResource( 5 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2

[node name="part_wave_time_tracker" type="Node" parent="."]
script = ExtResource( 4 )

[node name="timer" type="Timer" parent="part_wave_time_tracker"]

[connection signal="fade_in_finished" from="black_overlay" to="." method="_on_black_overlay_fade_in_finished"]
[connection signal="animation_finished" from="black_overlay/animation_player" to="black_overlay" method="_on_animation_player_animation_finished"]
[connection signal="timeout" from="part_wave_time_tracker/timer" to="part_wave_time_tracker" method="_on_timer_timeout"]
